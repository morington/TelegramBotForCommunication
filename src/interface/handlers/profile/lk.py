from typing import Optional

from aiogram import Router, F
from aiogram.types import CallbackQuery

from src.callbacks.user import SetRoleCallback, Commands
from src.core.domain.entities import FreelancerProfileEntity, UserEntity, DetectGitEntity
from src.infrastructure.repository.models import RoleEnum
from src.use_cases.profile import detect_git_platform, detect_url
from src.use_cases.services.profile import FreelancerProfileService

router = Router(name=__name__)


@router.callback_query(SetRoleCallback.filter())
async def creating_personal_account(
        callback_query: CallbackQuery,
        callback_data: SetRoleCallback,
        user_entity: UserEntity,
        freelancer_profile_query: FreelancerProfileService
) -> None:
    if callback_data.role == RoleEnum.freelancer:
        freelancer_entity = FreelancerProfileEntity(user_id=user_entity.id)
        profile: FreelancerProfileEntity = await freelancer_profile_query.add_profile(profile=freelancer_entity)

        detect_git: Optional[DetectGitEntity] = detect_git_platform(url=profile.git)
        git = f" ‚óè {detect_git.value}: {profile.git}\n" if detect_git else ""

        site = f" ‚óè –õ–∏—á–Ω—ã–π —Å–∞–π—Ç: {profile.personal_site_url}\n" if detect_url(url=profile.personal_site_url) else ""

        build_languages = [
            f"<a href={lang.url}>{lang.name}</a>"
            for lang in profile.languages
        ]
        languages = f" ‚óè –û–ø—ã—Ç –≤ —è–∑—ã–∫–∞—Ö: {','.join(build_languages)}\n" if build_languages else ""

        build_stacks = [
            f"<a href={stack.url}>{stack.name}</a>"
            for stack in profile.stacks
        ]
        stacks = f" ‚óè –°—Ç–µ–∫: {','.join(build_stacks)}\n" if build_stacks else ""

        reviews = f"–ù–∞–π–¥–µ–Ω–æ {profile.reviews_count} –æ—Ç–∑—ã–≤–æ–≤ <a href='www.google.com'>[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å]</a>" if profile.reviews_count else "–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"
        verification = "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if profile.is_verified else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"

        text = (
            f"<u>üìÇ –ü—Ä–æ—Ñ–∏–ª—å: {user_entity.full_name}</u>\n"
            f"<i>{profile.bio or '–ë–∏–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</i>\n\n"
            f"<b>{git}</b>"
            f"<b>{site}</b>"
            f"<b>{languages}</b>"
            f"<b>{stacks}</b>"
            f"<b>{reviews}</b>\n"
            f"\n"
            f"<b>–ö–∞—Ä–º–∞: {profile.karma} <a href='www.google.com'>[–ß—Ç–æ —ç—Ç–æ?]</a></b>\n"
            f"<i>{verification}</i> <b><a href='www.google.com'>[–ß—Ç–æ —ç—Ç–æ?]</a></b>"
        )

        await callback_query.message.edit_text("<b>–û—Ç–ª–∏—á–Ω–æ!</b> –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.\n<b>–í–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:</b>")
        await callback_query.message.answer(text=text)
    elif callback_data.role == RoleEnum.customer:
        await callback_query.answer(text="‚ö†Ô∏è –î–∞–Ω–Ω–∞—è —Ä–æ–ª—å –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
    else:
        await callback_query.answer(text="‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ä–æ–ª–∏")

    await callback_query.answer()


@router.callback_query(Commands.filter(F.command.in_({"profile_account",})))
async def profile_account(
        callback_query: CallbackQuery
) -> None:
    ...